Interpreter::getInstance()->registerCommand(new GraphInstr);
Interpreter::getInstance()->registerCommand(new AlignInstr);
Interpreter::getInstance()->registerCommand(new BackupRepositoryInstr);
Interpreter::getInstance()->registerCommand(new BandBInstr);
Interpreter::getInstance()->registerCommand(new BayesSearchInstr);
Interpreter::getInstance()->registerCommand(new BibliographyInstr);
Interpreter::getInstance()->registerCommand(new BootstrapInstr);
Interpreter::getInstance()->registerCommand(new BreakInstr);
Interpreter::getInstance()->registerCommand(new CheckParsimonyInstr);
Interpreter::getInstance()->registerCommand(new CombineRepositoriesInstr);
Interpreter::getInstance()->registerCommand(new ConTreeInstr);
Interpreter::getInstance()->registerCommand(new ConstructAncestorStatesInstr);
Interpreter::getInstance()->registerCommand(new DSetInstr);
Interpreter::getInstance()->registerCommand(new DecrementInstr);
Interpreter::getInstance()->registerCommand(new DeleteDataInstr);
Interpreter::getInstance()->registerCommand(new DeleteTreeInstr);
Interpreter::getInstance()->registerCommand(new EmptyInstr);
Interpreter::getInstance()->registerCommand(new ExecuteInstr);
Interpreter::getInstance()->registerCommand(new ExportInstr);
Interpreter::getInstance()->registerCommand(new GetBestScoreFunction);
Interpreter::getInstance()->registerCommand(new GetNumCharsFunction);
Interpreter::getInstance()->registerCommand(new GetTreesInstr);
Interpreter::getInstance()->registerCommand(new GetWeightsLengthFunction);
Interpreter::getInstance()->registerCommand(new HSearchInstr);
Interpreter::getInstance()->registerCommand(new HelpInstr);
Interpreter::getInstance()->registerCommand(new IncrementInstr);
Interpreter::getInstance()->registerCommand(new InteractiveInstr);
Interpreter::getInstance()->registerCommand(new LBSTestInstr);
Interpreter::getInstance()->registerCommand(new LScoresInstr);
Interpreter::getInstance()->registerCommand(new LSetInstr);
Interpreter::getInstance()->registerCommand(new LimitsFunction);
Interpreter::getInstance()->registerCommand(new LoadDataInstr);
Interpreter::getInstance()->registerCommand(new LogInstr);
Interpreter::getInstance()->registerCommand(new NeighborTestInstr);
Interpreter::getInstance()->registerCommand(new NJInstr);
Interpreter::getInstance()->registerCommand(new PScoresInstr);
Interpreter::getInstance()->registerCommand(new PercentIdentityInstr);
Interpreter::getInstance()->registerCommand(new PrintInstr);
Interpreter::getInstance()->registerCommand(new PrintMatrixInstr);
Interpreter::getInstance()->registerCommand(new QuitInstr);
Interpreter::getInstance()->registerCommand(new RAxMLSearchInstr);
Interpreter::getInstance()->registerCommand(new RSearchInstr);
Interpreter::getInstance()->registerCommand(new RandomFunction);
Interpreter::getInstance()->registerCommand(new RandomMorphInstr);
Interpreter::getInstance()->registerCommand(new ReturnInstr);
Interpreter::getInstance()->registerCommand(new SRandomInstr);
Interpreter::getInstance()->registerCommand(new SSAlignInstr);
Interpreter::getInstance()->registerCommand(new SSPredictInstr);
Interpreter::getInstance()->registerCommand(new SaveTreesInstr);
Interpreter::getInstance()->registerCommand(new SetInstr);
Interpreter::getInstance()->registerCommand(new ShowTreesInstr);
Interpreter::getInstance()->registerCommand(new SourceInstr);
Interpreter::getInstance()->registerCommand(new StackTraceInstr);
Interpreter::getInstance()->registerCommand(new StoreTreeInstr);
Interpreter::getInstance()->registerCommand(new StringLengthFunction);
Interpreter::getInstance()->registerCommand(new SubStringFunction);
Interpreter::getInstance()->registerCommand(new SumOfPairsInstr);
Interpreter::getInstance()->registerCommand(new TimeFunction);
Interpreter::getInstance()->registerCommand(new TreeInfoInstr);
Interpreter::getInstance()->registerCommand(new UpdateInstr);
Interpreter::getInstance()->registerCommand(new UPGMAInstr);
Interpreter::getInstance()->registerCommand(new UseDataInstr);
Interpreter::getInstance()->registerCommand(new UseTreeInstr);
Interpreter::getInstance()->registerCommand(new WeightsInstr);
Interpreter::getInstance()->registerCommand(new DeclareVarInstr);
Interpreter::getInstance()->registerCommand(new WeightsResetInstr);
Interpreter::getInstance()->registerCommand(new DisplayInstr);
Interpreter::getInstance()->registerCommand(new MRPInstr);
Interpreter::getInstance()->registerCommand(new TreeDistInstr);
Interpreter::getInstance()->registerCommand(new GradDescInstr);
Interpreter::getInstance()->registerCommand(new ResolveTreesInstr);
Interpreter::getInstance()->registerCommand(new SectorSearchInstr);
